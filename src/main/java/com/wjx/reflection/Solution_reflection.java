package com.wjx.reflection;

/**
 * 反射有什么作用？
 * 反射指运行时动态获取和操作类的信息，包括方法，字段，构造函数等。
 * 主要作用：
 * 1. 动态加载类：反射机制允许在运行时动态地加载类，这样可以根据配置文件或其他条件决定使用哪个类。
 *
 * 2. 获取类信息：通过反射，可以获取类的名称、字段、方法、注解等信息。这对于编写通用的框架和工具类非常有用。
 *
 * 3. 创建对象：通过反射可以在运行时创建类的对象，即使在编译时无法确定要使用哪个类。
 *
 * 4. 调用方法：可以通过反射动态地调用类的方法，包括私有方法。
 *
 * 5. 修改字段：反射允许程序在运行时访问和修改类的字段，即使这些字段是私有的。
 *
 * 6. 动态代理：反射机制使得动态代理变得可能，通过代理可以在方法调用前后插入一些自定义的逻辑。
 *
 * 缺点：
 *
 * 但也可能带来一些安全隐患，如忽略了泛型检查。
 *
 *
 * @Author wangjiaxing
 * @Date 2023/7/26
 */
public class Solution_reflection {
}
