package com.wjx.backtrack;

/**
 *其实回溯算法和我们常说的 DFS 算法非常类似，本质上就是一种暴力穷举算法。回溯算法和 DFS 算法的细微差别是：回溯算法是在遍历「树枝」，DFS 算法是在遍历「节点」，本文就是简单提一下，等你看到后文 图论算法基础 时就能深刻理解这句话的含义了。
 *
 * 废话不多说，直接上回溯算法框架，解决一个回溯问题，实际上就是一个决策树的遍历过程，站在回溯树的一个节点上，你只需要思考 3 个问题：
 *
 * 1、路径：也就是已经做出的选择。
 *
 * 2、选择列表：也就是你当前可以做的选择。
 *
 * 3、结束条件：也就是到达决策树底层，无法再做选择的条件。
 *
 * result = []
 * def backtrack(路径, 选择列表):
 *     if 满足结束条件:
 *         result.add(路径)
 *         return
 *
 *     for 选择 in 选择列表:
 *         做选择
 *         backtrack(路径, 选择列表)
 *         撤销选择
 *
 *
 *
 *
 * @Author wangjiaxing
 * @Date 2023/4/28
 */
public interface Backtrack_solutions {

}
